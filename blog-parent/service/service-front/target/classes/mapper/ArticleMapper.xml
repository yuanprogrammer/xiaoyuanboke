<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoyuan.front.db.dao.ArticleMapper">

    <select id="findArticleList" resultType="com.xiaoyuan.front.vo.ArticleVo">
        SELECT
        -- 文章表数据
        art.id as number,
        art.title,
        art.cover,
        art.digest,
        art.tags,
        DATE_FORMAT(art.gmt_create, '%Y-%m-%d') as publish_time,
        -- 用户信息
        u.nickname AS authorName,
        u.avatar as authorAvatar,
        -- 浏览量
        art.view_count,
        -- 文章评论表数据
        COALESCE(com.count, 0) as comment_count,
        -- 点赞数量
        COALESCE(lik.count, 0) as like_count,
        -- 收藏数量
        COALESCE(col.count, 0) as collect_count
        FROM xy_article art
        -- 左拼接查询用户信息
        LEFT JOIN xy_common_user u ON u.id = art.author_id
        -- 左拼接查询评论数量
        LEFT JOIN (SELECT article_id, count(id) AS count FROM xy_article_comment GROUP BY article_id) com ON com.article_id = art.id
        -- 左拼接查询点赞数量
        LEFT JOIN (SELECT article_id, count(id) AS count FROM xy_article_like GROUP BY article_id) lik ON lik.article_id = art.id
        -- 左拼接查询收藏数量
        LEFT JOIN (SELECT article_id, count(id) AS count from xy_article_collect GROUP BY article_id) col ON col.article_id = art.id
        -- 搜索条件
        <where>
            deleted = '0'
            <if test="searchWord != null and searchWord != ''">
                AND ( title like CONCAT(#{searchWord}, '%') or digest like CONCAT(#{searchWord}, '%') or tags like CONCAT(#{searchWord}, '%') )
            </if>
        </where>
        -- 排序
        ORDER BY ${sortCondition} DESC
    </select>

    <!-- 热门文章 -->
    <select id="findHosts" parameterType="int" resultType="com.xiaoyuan.front.vo.RecommendArticleVo">
        select id as number, title
        from xy_article
        where deleted = 0
        order by view_count desc
        limit #{limit}
    </select>

    <!-- 最新文章 -->
    <select id="findNews" parameterType="int" resultType="com.xiaoyuan.front.vo.RecommendArticleVo">
        select id as number, title
        from xy_article
        where deleted = 0
        order by gmt_create desc
        limit #{limit}
    </select>

    <!-- 文章档案 -->
    <select id="findArchives" resultType="com.xiaoyuan.front.vo.ArchivesVo">
        select DATE_FORMAT(gmt_create, '%Y-%m') as archivesTime, count(*) as count
        from xy_article
        where deleted = 0
        group by archivesTime
        order by count desc
    </select>

    <!-- 查询文章总数 -->
    <select id="findTotal" resultType="int">
        select count(*)
        from xy_article
        where deleted = '0'
    </select>

    <!-- 查询文章浏览总数 -->
    <select id="findViewCount" resultType="int">
        select sum(view_count)
        from xy_article
        where deleted = 0
    </select>

    <!-- 增加文章浏览量 -->
    <update id="updateViewCount" parameterType="long">
        update xy_article
        set view_count = view_count + 1
        where id = #{id}
    </update>

    <!-- 根据分类编号查询文章列表 -->
    <select id="findCategoryArticleList" resultType="com.xiaoyuan.front.db.entity.Article">
        SELECT id,
               title,
               digest,
               view_count,
               gmt_create
        FROM xy_article x
        WHERE deleted = '0'
          AND id IN (SELECT article_id FROM xy_article_category WHERE category_id = #{categoryId})
        ORDER BY gmt_create DESC
    </select>
    
    <resultMap id="archivesMap" type="com.xiaoyuan.front.vo.ArchivesVo">
        <result column="time" property="archivesTime"></result>
        <result column="count" property="count"></result>
        <collection property="articleList" ofType="com.xiaoyuan.front.vo.ArticleVo" javaType="list">
            <result column="id" property="number"></result>
            <result column="title" property="title"></result>
        </collection>
    </resultMap>

    <!-- 查询所有档案的文章列表 -->
    <select id="findArchivesArticleList" resultMap="archivesMap">
        SELECT
            DATE_FORMAT(any_value(art1.gmt_create), '%Y-%m' ) AS time,
            art2.id,
            art2.title,
            any_value(art3.count) as count
        FROM
            xy_article art1
                LEFT JOIN xy_article art2 ON DATE_FORMAT( art2.gmt_create, '%Y-%m' ) = DATE_FORMAT( art1.gmt_create, '%Y-%m' )
                AND art2.deleted = 0
                LEFT JOIN ( SELECT DATE_FORMAT( gmt_create, '%Y-%m' ) time, count(*) count FROM xy_article WHERE deleted = '0' GROUP BY time ) art3 ON art3.time = DATE_FORMAT( art1.gmt_create, '%Y-%m' )
        WHERE
            art1.deleted = 0
        GROUP BY
            art2.id
        ORDER BY
            time DESC
    </select>

    <select id="getArticleDetailById" parameterType="long" resultType="com.xiaoyuan.front.vo.ArticleVo">
        SELECT
            u.avatar as author_avatar,
            u.nickname as author_ame,
            title,
            tags,
            art.gmt_create as publish_time,
            art.gmt_update as edit_time,
            view_count
        FROM
            xy_article art
                LEFT JOIN xy_common_user u ON u.id = art.author_id
        WHERE
            art.id = #{id}
        LIMIT 1
    </select>

    <!-- 查询文章列表方案二 -->
    <select id="findArticleList1" resultType="com.xiaoyuan.front.vo.ArticleVo">
        SELECT *
        FROM (
            SELECT
            -- 文章表数据
            art.id as number,
            art.title,
            art.cover,
            art.digest,
            art.tags,
            art.gmt_create as publishTime,
            -- 用户信息
            u.nickname AS authorName,
            u.avatar as authorAvatar,
            -- 	浏览量
            art.view_count,
            -- 文章评论表数据
            COALESCE(com.count, 0) as comment_count,
            -- 	点赞数量
            COALESCE(lik.count, 0) as like_count,
            -- 	收藏数量
            COALESCE(col.count, 0) as collect_count
            FROM xy_article art
            -- 	左拼接查询用户信息
            LEFT JOIN xy_common_user u ON u.id = art.author_id
            -- 	左拼接查询评论数量
            LEFT JOIN (SELECT article_id, count(id) AS count FROM xy_article_comment GROUP BY article_id) com ON com.article_id = art.id
            -- 左拼接查询点赞数量
            LEFT JOIN (SELECT article_id, count(id) AS count FROM xy_article_like GROUP BY article_id) lik ON lik.article_id = art.id
            -- 左拼接查询收藏数量
            LEFT JOIN (SELECT article_id, count(id) AS count from xy_article_collect GROUP BY article_id) col ON col.article_id = art.id
            -- 搜索条件
            WHERE title like CONCAT(#{searchWord}, '%')
            UNION ALL

            SELECT
            -- 文章表数据
            art.id as number,
            art.title,
            art.cover,
            art.digest,
            art.tags,
            art.gmt_create as publishTime,
            -- 用户信息
            u.nickname AS authorName,
            u.avatar as authorAvatar,
            -- 	浏览量
            art.view_count,
            -- 文章评论表数据
            COALESCE(com.count, 0) as comment_count,
            -- 	点赞数量
            COALESCE(lik.count, 0) as like_count,
            -- 	收藏数量
            COALESCE(col.count, 0) as collect_count
            FROM xy_article art
            -- 	左拼接查询用户信息
            LEFT JOIN xy_common_user u ON u.id = art.author_id
            -- 	左拼接查询评论数量
            LEFT JOIN (SELECT article_id, count(id) AS count FROM xy_article_comment GROUP BY article_id) com ON com.article_id = art.id
            -- 左拼接查询点赞数量
            LEFT JOIN (SELECT article_id, count(id) AS count FROM xy_article_like GROUP BY article_id) lik ON lik.article_id = art.id
            -- 左拼接查询收藏数量
            LEFT JOIN (SELECT article_id, count(id) AS count from xy_article_collect GROUP BY article_id) col ON col.article_id = art.id
            -- 搜索条件
            WHERE digest like CONCAT(#{searchWord}, '%')
            UNION ALL

            SELECT
            -- 文章表数据
            art.id as number,
            art.title,
            art.cover,
            art.digest,
            art.tags,
            art.gmt_create as publishTime,
            -- 用户信息
            u.nickname AS authorName,
            u.avatar as authorAvatar,
            -- 	浏览量
            art.view_count,
            -- 文章评论表数据
            COALESCE(com.count, 0) as comment_count,
            -- 	点赞数量
            COALESCE(lik.count, 0) as like_count,
            -- 	收藏数量
            COALESCE(col.count, 0) as collect_count
            FROM xy_article art
            -- 	左拼接查询用户信息
            LEFT JOIN xy_common_user u ON u.id = art.author_id
            -- 	左拼接查询评论数量
            LEFT JOIN (SELECT article_id, count(id) AS count FROM xy_article_comment GROUP BY article_id) com ON com.article_id = art.id
            -- 左拼接查询点赞数量
            LEFT JOIN (SELECT article_id, count(id) AS count FROM xy_article_like GROUP BY article_id) lik ON lik.article_id = art.id
            -- 左拼接查询收藏数量
            LEFT JOIN (SELECT article_id, count(id) AS count from xy_article_collect GROUP BY article_id) col ON col.article_id = art.id
            -- 搜索条件
            WHERE tags like CONCAT(#{searchWord}, '%')
             ) t
            -- 排序
            ORDER BY #{sortCondition} DESC
    </select>
</mapper>